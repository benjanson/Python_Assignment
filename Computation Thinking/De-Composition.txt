Decomposition in computer science, also known as factoring, is breaking a complex problem or system into parts that are easier to conceive, understand, program, and maintain.

There are different types of decomposition defined in computer sciences:

In structured programming, algorithmic decomposition breaks a process down into well-defined steps:

Structured analysis:
     breaks down a software system from the system context level to system functions and data entities as described by Tom DeMarco.
     
Object-oriented decomposition:
    On the other hand, breaks a large system down into progressively smaller classes or objects that are responsible for some part of the problem domain.
    
Booch:
     algorithmic decomposition is a necessary part of object-oriented analysis and design, but object-oriented systems start with and emphasize decomposition into classes.
     
More generally, functional decomposition in computer science is a technique for mastering the complexity of the function of a model. A functional model of a system is thereby replaced by a series of functional models of subsystems.
